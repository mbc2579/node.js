<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/main.css" rel="stylesheet">
</head>
    <body class="grey-bg">

        <!--
        %은 html사이에 자바스크립트 문법을 쓸 때 사용
        %-은 include문법 같은거 쓸 때 사용
        %=은 %-랑 유사하지만 %= 사이에 데이터가 html 파일이라고 가정하면 %=은 들어간 데이터가 고대로 나오지만 %-은 실제 html처럼 출력됨

        include()를 쓰면 다른 ejs파일에 있던 html 복사해올 수 있음
        -->

        <%- include('nav.ejs') %>

        <input class="search"> <button class="search-send">검색</button>

        <script>
            document.querySelector('.search-send').addEventListener('click', function() {
               let search = document.querySelector('.search').value
                location.href = '/search?val=' + search 
            })
        </script>

        <div class="white-bg">
            <!--html사이에 자바스크립트 문법을 쓰려면 % 여기안에 작성 %-->
            <% for(let i = 0; i < posts.length; i++) { %>
                <div class="list-box">
                    <!-- 서버 데이터를 ejs파일에 넣으려면?
                    1. ejs파일로 데이터 전송
                    2. ejs파일 안에서 %=데이터이름% -->
                    <h4><a href="/detail/<%=posts[i]._id%>"><%= posts[i].title %></a> <a href="/edit/<%=posts[i]._id %>">✏️</a> <span class="delete" data-id="<%= posts[i]._id %>"> 🗑️ </span> </h4>
                    <p><%= posts[i].content %></p>
                </div>
            <% } %>
        </div> 

        <a href="/list/next/<%= posts[posts.length-1]._id %>">다음</a>

        <script>
            for(let i = 0; i < '<%= posts.length %>'; i++) {
                    document.querySelectorAll('.delete')[i].addEventListener('click', function(e) {
                    e.target.dataset.id
                    fetch('/delete?docid=' + e.target.dataset.id, {
                        method : 'DELETE'
                    })
                    // 서버가 보내는게 문자일 경우 .text()
                    // 서버가 보내는거 array나 오브젝트 데이터일 경우 .json()
                    .then((r)=>r.text())
                    .then((r)=> {
                        e.target.parentElement.parentElement.style.display = 'none'
                    })
                })
            }
        </script>

        <script>
            // SSE 연결을 원하면 new EventSource('/URL')
            let eventSource = new EventSource('/stream/list')
            eventSource.addEventListener('msg', function(e) {
                console.log(e.data)
                let 가져온data = JSON.parse(e.data)
                document.querySelector('.white-bg').insertAdjacentHTML('afterbegin', `<div class="list-box"><h4>${가져온data.title}</h4></div>`)
            })
        </script>

    </body>
</html>